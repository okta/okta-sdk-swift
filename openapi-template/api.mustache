{{#operations}}//
// Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
// The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
//
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and limitations under the License.
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

#if canImport(FoundationNetworking)
import FoundationNetworking
#endif

public extension OktaClient {
{{#description}}
    /** {{description}} */{{/description}}
    struct {{classname}}: OktaClientAPI {
        internal let context: OktaClient.APIContext

{{#operation}}
    {{#allParams}}
    {{#isEnum}}
        /**
         enum for parameter {{paramName}}
         */
        {{#nonPublicApi}}internal{{/nonPublicApi}}{{^nonPublicApi}}public{{/nonPublicApi}} enum {{enumName}}_{{operationId}}: {{^isContainer}}{{{dataType}}}{{/isContainer}}{{#isContainer}}String{{/isContainer}}, CaseIterable {
            {{#allowableValues}}
            {{#enumVars}}
            case {{name}} = {{{value}}}
            {{/enumVars}}
            {{/allowableValues}}
        }

    {{/isEnum}}
    {{/allParams}}
        /**
         {{#summary}}
         {{{summary}}}
         {{/summary}}{{#allParams}}
         - parameter {{paramName}}: ({{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{description}} {{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{/allParams}}
         */{{#isDeprecated}}
        @available(*, deprecated, message: "This operation is deprecated.")
        {{/isDeprecated}}{{^returnType}}
        @discardableResult{{/returnType}}
        public func {{operationId}}({{#allParams}}{{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}? = nil{{/required}}{{^-last}}, {{/-last}}{{/allParams}}) async throws -> OktaResponse<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Empty{{/returnType}}> {
            try await send(try request{{#bodyParam}}WithBody{{/bodyParam}}(to: "{{{path}}}"{{#hasPathParams}}.expanded(using: [
                {{#pathParams}}
                    "{{paramName}}": {{paramName}}{{^-last}}, {{/-last}}
                {{/pathParams}}
                ]){{/hasPathParams}}, method: "{{httpMethod}}"{{#hasQueryParams}}, query: [
                    {{#queryParams}}
                    "{{paramName}}": {{paramName}}{{^-last}}, {{/-last}}
                    {{/queryParams}}
                ]{{/hasQueryParams}}{{#hasHeaderParams}}, headers: [
                    {{#headerParams}}
                    "{{paramName}}": {{paramName}}?.stringValue{{^-last}}, {{/-last}}
                    {{/headerParams}}
                ]{{/hasHeaderParams}}{{#bodyParam}}, body: {{paramName}}{{/bodyParam}}))
        }

{{/operation}}
    }
}
{{/operations}}
