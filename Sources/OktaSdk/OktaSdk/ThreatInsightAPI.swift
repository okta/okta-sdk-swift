//
// ThreatInsightAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(Combine)
import Combine
#endif
import AnyCodable

extension OktaSdk.API {


public struct ThreatInsightAPI {
    internal let configuration: OktaClient.Configuration
    internal let queue: DispatchQueue

    internal init(configuration: OktaClient.Configuration, queue: DispatchQueue) {
        self.configuration = configuration
        self.queue = queue
    }

    /**

     - returns: AnyPublisher<ThreatInsightConfiguration, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    public func getCurrentConfiguration() -> AnyPublisher<ThreatInsightConfiguration, Error> {
        return Future<ThreatInsightConfiguration, Error>.init { promise in
            getCurrentConfigurationWithRequestBuilder().execute(queue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif
    /**

     - parameter completion: completion handler to receive the result
     */
    func getCurrentConfiguration(completion: @escaping ((_ result: Swift.Result<ThreatInsightConfiguration, Error>) -> Void)) {
        getCurrentConfigurationWithRequestBuilder().execute(queue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     - GET /api/v1/threats/configuration
     - Gets current ThreatInsight configuration
     - API Key:
       - type: apiKey Authorization 
       - name: api_token
     - returns: RequestBuilder<ThreatInsightConfiguration> 
     */
    public func getCurrentConfigurationWithRequestBuilder() -> RequestBuilder<ThreatInsightConfiguration> {
        let path = "/api/v1/threats/configuration"
        let URLString = configuration.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        var headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
        headerParameters.merge(configuration.customHeaders) { lhs, rhs in
            return lhs
        }

        let requestBuilder: RequestBuilder<ThreatInsightConfiguration>.Type = OktaSdkAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter threatInsightConfiguration: (body)  
     - returns: AnyPublisher<ThreatInsightConfiguration, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    public func updateConfiguration(threatInsightConfiguration: ThreatInsightConfiguration) -> AnyPublisher<ThreatInsightConfiguration, Error> {
        return Future<ThreatInsightConfiguration, Error>.init { promise in
            updateConfigurationWithRequestBuilder(threatInsightConfiguration: threatInsightConfiguration).execute(queue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif
    /**

     - parameter threatInsightConfiguration: (body)  
     - parameter completion: completion handler to receive the result
     */
    func updateConfiguration(threatInsightConfiguration: ThreatInsightConfiguration, completion: @escaping ((_ result: Swift.Result<ThreatInsightConfiguration, Error>) -> Void)) {
        updateConfigurationWithRequestBuilder(threatInsightConfiguration: threatInsightConfiguration).execute(queue) { result -> Void in
            switch result {
            case let .success(response):
                completion(.success(response.body!))
            case let .failure(error):
                completion(.failure(error))
            }
        }
    }

    /**
     - POST /api/v1/threats/configuration
     - Updates ThreatInsight configuration
     - API Key:
       - type: apiKey Authorization 
       - name: api_token
     - parameter threatInsightConfiguration: (body)  
     - returns: RequestBuilder<ThreatInsightConfiguration> 
     */
    public func updateConfigurationWithRequestBuilder(threatInsightConfiguration: ThreatInsightConfiguration) -> RequestBuilder<ThreatInsightConfiguration> {
        let path = "/api/v1/threats/configuration"
        let URLString = configuration.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: threatInsightConfiguration)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        var headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)
        headerParameters.merge(configuration.customHeaders) { lhs, rhs in
            return lhs
        }

        let requestBuilder: RequestBuilder<ThreatInsightConfiguration>.Type = OktaSdkAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
}
