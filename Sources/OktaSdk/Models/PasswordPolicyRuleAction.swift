//
// PasswordPolicyRuleAction.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class PasswordPolicyRuleAction: Codable, Hashable {

    public enum Access: String, Codable, CaseIterable {
        case allow = "ALLOW"
        case deny = "DENY"
    }
    public var access: Access?

    public init(access: Access? = nil) {
        self.access = access
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case access
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(access, forKey: .access)
    }



    public static func == (lhs: PasswordPolicyRuleAction, rhs: PasswordPolicyRuleAction) -> Bool {
        lhs.access == rhs.access
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(access?.hashValue)
        
    }

}
