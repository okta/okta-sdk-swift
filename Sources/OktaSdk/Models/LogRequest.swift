//
// LogRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class LogRequest: Codable, Hashable {

    public var ipChain: [LogIpAddress]?

    public init(ipChain: [LogIpAddress]? = nil) {
        self.ipChain = ipChain
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ipChain
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(ipChain, forKey: .ipChain)
    }



    public static func == (lhs: LogRequest, rhs: LogRequest) -> Bool {
        lhs.ipChain == rhs.ipChain
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(ipChain?.hashValue)
        
    }

}
