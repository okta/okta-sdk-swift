//
// IdentityProviderCredentialsClient.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class IdentityProviderCredentialsClient: Codable, Hashable {

    public var clientId: String?
    public var clientSecret: String?

    public init(clientId: String? = nil, clientSecret: String? = nil) {
        self.clientId = clientId
        self.clientSecret = clientSecret
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case clientId = "client_id"
        case clientSecret = "client_secret"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(clientId, forKey: .clientId)
        try container.encodeIfPresent(clientSecret, forKey: .clientSecret)
    }



    public static func == (lhs: IdentityProviderCredentialsClient, rhs: IdentityProviderCredentialsClient) -> Bool {
        lhs.clientId == rhs.clientId &&
        lhs.clientSecret == rhs.clientSecret
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(clientId?.hashValue)
        hasher.combine(clientSecret?.hashValue)
        
    }

}
