//
// PlatformConditionEvaluatorPlatform.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class PlatformConditionEvaluatorPlatform: Codable, Hashable {

    public enum ModelType: String, Codable, CaseIterable {
        case desktop = "DESKTOP"
        case mobile = "MOBILE"
        case other = "OTHER"
        case any = "ANY"
    }
    public var os: PlatformConditionEvaluatorPlatformOperatingSystem?
    public var type: ModelType?

    public init(os: PlatformConditionEvaluatorPlatformOperatingSystem? = nil, type: ModelType? = nil) {
        self.os = os
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case os
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(os, forKey: .os)
        try container.encodeIfPresent(type, forKey: .type)
    }



    public static func == (lhs: PlatformConditionEvaluatorPlatform, rhs: PlatformConditionEvaluatorPlatform) -> Bool {
        lhs.os == rhs.os &&
        lhs.type == rhs.type
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(os?.hashValue)
        hasher.combine(type?.hashValue)
        
    }

}
