//
// OpenIdConnectApplicationIdpInitiatedLogin.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class OpenIdConnectApplicationIdpInitiatedLogin: Codable, Hashable {

    public var mode: String?
    public var defaultScope: [String]?

    public init(mode: String? = nil, defaultScope: [String]? = nil) {
        self.mode = mode
        self.defaultScope = defaultScope
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mode
        case defaultScope = "default_scope"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(mode, forKey: .mode)
        try container.encodeIfPresent(defaultScope, forKey: .defaultScope)
    }



    public static func == (lhs: OpenIdConnectApplicationIdpInitiatedLogin, rhs: OpenIdConnectApplicationIdpInitiatedLogin) -> Bool {
        lhs.mode == rhs.mode &&
        lhs.defaultScope == rhs.defaultScope
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(mode?.hashValue)
        hasher.combine(defaultScope?.hashValue)
        
    }

}
