//
// LinkedObject.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class LinkedObject: Codable, Hashable {

    public var links: [String: AnyCodable]?
    public var associated: LinkedObjectDetails?
    public var primary: LinkedObjectDetails?

    public init(links: [String: AnyCodable]? = nil, associated: LinkedObjectDetails? = nil, primary: LinkedObjectDetails? = nil) {
        self.links = links
        self.associated = associated
        self.primary = primary
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case links = "_links"
        case associated
        case primary
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(links, forKey: .links)
        try container.encodeIfPresent(associated, forKey: .associated)
        try container.encodeIfPresent(primary, forKey: .primary)
    }



    public static func == (lhs: LinkedObject, rhs: LinkedObject) -> Bool {
        lhs.links == rhs.links &&
        lhs.associated == rhs.associated &&
        lhs.primary == rhs.primary
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(links?.hashValue)
        hasher.combine(associated?.hashValue)
        hasher.combine(primary?.hashValue)
        
    }

}
