//
// SingleLogout.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class SingleLogout: Codable, Hashable {

    public var enabled: Bool?
    public var issuer: String?
    public var logoutUrl: String?

    public init(enabled: Bool? = nil, issuer: String? = nil, logoutUrl: String? = nil) {
        self.enabled = enabled
        self.issuer = issuer
        self.logoutUrl = logoutUrl
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enabled
        case issuer
        case logoutUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(issuer, forKey: .issuer)
        try container.encodeIfPresent(logoutUrl, forKey: .logoutUrl)
    }



    public static func == (lhs: SingleLogout, rhs: SingleLogout) -> Bool {
        lhs.enabled == rhs.enabled &&
        lhs.issuer == rhs.issuer &&
        lhs.logoutUrl == rhs.logoutUrl
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(enabled?.hashValue)
        hasher.combine(issuer?.hashValue)
        hasher.combine(logoutUrl?.hashValue)
        
    }

}
