//
// UserActivationToken.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class UserActivationToken: Codable, Hashable {

    public var activationToken: String?
    public var activationUrl: String?

    public init(activationToken: String? = nil, activationUrl: String? = nil) {
        self.activationToken = activationToken
        self.activationUrl = activationUrl
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case activationToken
        case activationUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(activationToken, forKey: .activationToken)
        try container.encodeIfPresent(activationUrl, forKey: .activationUrl)
    }



    public static func == (lhs: UserActivationToken, rhs: UserActivationToken) -> Bool {
        lhs.activationToken == rhs.activationToken &&
        lhs.activationUrl == rhs.activationUrl
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(activationToken?.hashValue)
        hasher.combine(activationUrl?.hashValue)
        
    }

}
