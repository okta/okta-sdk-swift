//
// DomainLinks.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class DomainLinks: Codable, Hashable {

    public var certificate: AnyCodable?
    public var _self: AnyCodable?
    public var verify: AnyCodable?

    public init(certificate: AnyCodable? = nil, _self: AnyCodable? = nil, verify: AnyCodable? = nil) {
        self.certificate = certificate
        self._self = _self
        self.verify = verify
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case certificate
        case _self = "self"
        case verify
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(certificate, forKey: .certificate)
        try container.encodeIfPresent(_self, forKey: ._self)
        try container.encodeIfPresent(verify, forKey: .verify)
    }



    public static func == (lhs: DomainLinks, rhs: DomainLinks) -> Bool {
        lhs.certificate == rhs.certificate &&
        lhs._self == rhs._self &&
        lhs.verify == rhs.verify
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(certificate?.hashValue)
        hasher.combine(_self?.hashValue)
        hasher.combine(verify?.hashValue)
        
    }

}
