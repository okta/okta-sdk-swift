//
// OktaSignOnPolicy.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class OktaSignOnPolicy: Codable, Hashable {

    public var conditions: OktaSignOnPolicyConditions?

    public init(conditions: OktaSignOnPolicyConditions? = nil) {
        self.conditions = conditions
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case conditions
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(conditions, forKey: .conditions)
    }



    public static func == (lhs: OktaSignOnPolicy, rhs: OktaSignOnPolicy) -> Bool {
        lhs.conditions == rhs.conditions
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(conditions?.hashValue)
        
    }

}
