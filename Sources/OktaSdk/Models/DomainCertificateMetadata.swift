//
// DomainCertificateMetadata.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class DomainCertificateMetadata: Codable, Hashable {

    public var expiration: String?
    public var fingerprint: String?
    public var subject: String?

    public init(expiration: String? = nil, fingerprint: String? = nil, subject: String? = nil) {
        self.expiration = expiration
        self.fingerprint = fingerprint
        self.subject = subject
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case expiration
        case fingerprint
        case subject
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(expiration, forKey: .expiration)
        try container.encodeIfPresent(fingerprint, forKey: .fingerprint)
        try container.encodeIfPresent(subject, forKey: .subject)
    }



    public static func == (lhs: DomainCertificateMetadata, rhs: DomainCertificateMetadata) -> Bool {
        lhs.expiration == rhs.expiration &&
        lhs.fingerprint == rhs.fingerprint &&
        lhs.subject == rhs.subject
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(expiration?.hashValue)
        hasher.combine(fingerprint?.hashValue)
        hasher.combine(subject?.hashValue)
        
    }

}
