//
// ApplicationSettingsNotificationsVpnNetwork.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class ApplicationSettingsNotificationsVpnNetwork: Codable, Hashable {

    public var connection: String?
    public var exclude: [String]?
    public var include: [String]?

    public init(connection: String? = nil, exclude: [String]? = nil, include: [String]? = nil) {
        self.connection = connection
        self.exclude = exclude
        self.include = include
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case connection
        case exclude
        case include
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(connection, forKey: .connection)
        try container.encodeIfPresent(exclude, forKey: .exclude)
        try container.encodeIfPresent(include, forKey: .include)
    }



    public static func == (lhs: ApplicationSettingsNotificationsVpnNetwork, rhs: ApplicationSettingsNotificationsVpnNetwork) -> Bool {
        lhs.connection == rhs.connection &&
        lhs.exclude == rhs.exclude &&
        lhs.include == rhs.include
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(connection?.hashValue)
        hasher.combine(exclude?.hashValue)
        hasher.combine(include?.hashValue)
        
    }

}
