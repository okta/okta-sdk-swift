//
// CreateUserRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class CreateUserRequest: Codable, Hashable {

    public var credentials: UserCredentials?
    public var groupIds: [String]?
    public var profile: UserProfile?
    public var type: UserType?

    public init(credentials: UserCredentials? = nil, groupIds: [String]? = nil, profile: UserProfile? = nil, type: UserType? = nil) {
        self.credentials = credentials
        self.groupIds = groupIds
        self.profile = profile
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case credentials
        case groupIds
        case profile
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(credentials, forKey: .credentials)
        try container.encodeIfPresent(groupIds, forKey: .groupIds)
        try container.encodeIfPresent(profile, forKey: .profile)
        try container.encodeIfPresent(type, forKey: .type)
    }



    public static func == (lhs: CreateUserRequest, rhs: CreateUserRequest) -> Bool {
        lhs.credentials == rhs.credentials &&
        lhs.groupIds == rhs.groupIds &&
        lhs.profile == rhs.profile &&
        lhs.type == rhs.type
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(credentials?.hashValue)
        hasher.combine(groupIds?.hashValue)
        hasher.combine(profile?.hashValue)
        hasher.combine(type?.hashValue)
        
    }

}
