//
// ApplicationSettingsNotificationsVpn.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class ApplicationSettingsNotificationsVpn: Codable, Hashable {

    public var helpUrl: String?
    public var message: String?
    public var network: ApplicationSettingsNotificationsVpnNetwork?

    public init(helpUrl: String? = nil, message: String? = nil, network: ApplicationSettingsNotificationsVpnNetwork? = nil) {
        self.helpUrl = helpUrl
        self.message = message
        self.network = network
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case helpUrl
        case message
        case network
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(helpUrl, forKey: .helpUrl)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(network, forKey: .network)
    }



    public static func == (lhs: ApplicationSettingsNotificationsVpn, rhs: ApplicationSettingsNotificationsVpn) -> Bool {
        lhs.helpUrl == rhs.helpUrl &&
        lhs.message == rhs.message &&
        lhs.network == rhs.network
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(helpUrl?.hashValue)
        hasher.combine(message?.hashValue)
        hasher.combine(network?.hashValue)
        
    }

}
