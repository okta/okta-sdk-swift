//
// UserSchemaAttributeItems.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class UserSchemaAttributeItems: Codable, Hashable {

    public var _enum: [String]?
    public var oneOf: [UserSchemaAttributeEnum]?
    public var type: String?

    public init(_enum: [String]? = nil, oneOf: [UserSchemaAttributeEnum]? = nil, type: String? = nil) {
        self._enum = _enum
        self.oneOf = oneOf
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _enum = "enum"
        case oneOf
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_enum, forKey: ._enum)
        try container.encodeIfPresent(oneOf, forKey: .oneOf)
        try container.encodeIfPresent(type, forKey: .type)
    }



    public static func == (lhs: UserSchemaAttributeItems, rhs: UserSchemaAttributeItems) -> Bool {
        lhs._enum == rhs._enum &&
        lhs.oneOf == rhs.oneOf &&
        lhs.type == rhs.type
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(_enum?.hashValue)
        hasher.combine(oneOf?.hashValue)
        hasher.combine(type?.hashValue)
        
    }

}
