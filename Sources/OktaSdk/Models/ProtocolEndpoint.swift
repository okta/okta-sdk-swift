//
// ProtocolEndpoint.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class ProtocolEndpoint: Codable, Hashable {

    public enum Binding: String, Codable, CaseIterable {
        case post = "HTTP-POST"
        case redirect = "HTTP-REDIRECT"
    }
    public enum ModelType: String, Codable, CaseIterable {
        case instance = "INSTANCE"
        case org = "ORG"
    }
    public var binding: Binding?
    public var destination: String?
    public var type: ModelType?
    public var url: String?

    public init(binding: Binding? = nil, destination: String? = nil, type: ModelType? = nil, url: String? = nil) {
        self.binding = binding
        self.destination = destination
        self.type = type
        self.url = url
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case binding
        case destination
        case type
        case url
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(binding, forKey: .binding)
        try container.encodeIfPresent(destination, forKey: .destination)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(url, forKey: .url)
    }



    public static func == (lhs: ProtocolEndpoint, rhs: ProtocolEndpoint) -> Bool {
        lhs.binding == rhs.binding &&
        lhs.destination == rhs.destination &&
        lhs.type == rhs.type &&
        lhs.url == rhs.url
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(binding?.hashValue)
        hasher.combine(destination?.hashValue)
        hasher.combine(type?.hashValue)
        hasher.combine(url?.hashValue)
        
    }

}
