//
// ApplicationCredentials.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class ApplicationCredentials: Codable, Hashable {

    public var signing: ApplicationCredentialsSigning?
    public var userNameTemplate: ApplicationCredentialsUsernameTemplate?

    public init(signing: ApplicationCredentialsSigning? = nil, userNameTemplate: ApplicationCredentialsUsernameTemplate? = nil) {
        self.signing = signing
        self.userNameTemplate = userNameTemplate
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case signing
        case userNameTemplate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(signing, forKey: .signing)
        try container.encodeIfPresent(userNameTemplate, forKey: .userNameTemplate)
    }



    public static func == (lhs: ApplicationCredentials, rhs: ApplicationCredentials) -> Bool {
        lhs.signing == rhs.signing &&
        lhs.userNameTemplate == rhs.userNameTemplate
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(signing?.hashValue)
        hasher.combine(userNameTemplate?.hashValue)
        
    }

}
