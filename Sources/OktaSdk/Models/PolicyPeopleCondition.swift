//
// PolicyPeopleCondition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class PolicyPeopleCondition: Codable, Hashable {

    public var groups: GroupCondition?
    public var users: UserCondition?

    public init(groups: GroupCondition? = nil, users: UserCondition? = nil) {
        self.groups = groups
        self.users = users
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case groups
        case users
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(groups, forKey: .groups)
        try container.encodeIfPresent(users, forKey: .users)
    }



    public static func == (lhs: PolicyPeopleCondition, rhs: PolicyPeopleCondition) -> Bool {
        lhs.groups == rhs.groups &&
        lhs.users == rhs.users
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(groups?.hashValue)
        hasher.combine(users?.hashValue)
        
    }

}
