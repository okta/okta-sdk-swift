//
// RiskPolicyRuleCondition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class RiskPolicyRuleCondition: Codable, Hashable {

    public var behaviors: Set<String>?

    public init(behaviors: Set<String>? = nil) {
        self.behaviors = behaviors
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case behaviors
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(behaviors, forKey: .behaviors)
    }



    public static func == (lhs: RiskPolicyRuleCondition, rhs: RiskPolicyRuleCondition) -> Bool {
        lhs.behaviors == rhs.behaviors
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(behaviors?.hashValue)
        
    }

}
