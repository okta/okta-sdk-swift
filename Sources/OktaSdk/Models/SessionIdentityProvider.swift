//
// SessionIdentityProvider.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class SessionIdentityProvider: Codable, Hashable {

    public var id: String?
    public var type: SessionIdentityProviderType?

    public init(id: String? = nil, type: SessionIdentityProviderType? = nil) {
        self.id = id
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(type, forKey: .type)
    }



    public static func == (lhs: SessionIdentityProvider, rhs: SessionIdentityProvider) -> Bool {
        lhs.id == rhs.id &&
        lhs.type == rhs.type
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(id?.hashValue)
        hasher.combine(type?.hashValue)
        
    }

}
