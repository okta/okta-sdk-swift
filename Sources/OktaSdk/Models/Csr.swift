//
// Csr.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class Csr: Codable, Hashable {

    public var created: Date?
    public var csr: String?
    public var id: String?
    public var kty: String?

    public init(created: Date? = nil, csr: String? = nil, id: String? = nil, kty: String? = nil) {
        self.created = created
        self.csr = csr
        self.id = id
        self.kty = kty
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case created
        case csr
        case id
        case kty
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(created, forKey: .created)
        try container.encodeIfPresent(csr, forKey: .csr)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(kty, forKey: .kty)
    }



    public static func == (lhs: Csr, rhs: Csr) -> Bool {
        lhs.created == rhs.created &&
        lhs.csr == rhs.csr &&
        lhs.id == rhs.id &&
        lhs.kty == rhs.kty
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(created?.hashValue)
        hasher.combine(csr?.hashValue)
        hasher.combine(id?.hashValue)
        hasher.combine(kty?.hashValue)
        
    }

}
