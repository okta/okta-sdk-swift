//
// AuthenticationProvider.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class AuthenticationProvider: Codable, Hashable {

    public var name: String?
    public var type: AuthenticationProviderType?

    public init(name: String? = nil, type: AuthenticationProviderType? = nil) {
        self.name = name
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(type, forKey: .type)
    }



    public static func == (lhs: AuthenticationProvider, rhs: AuthenticationProvider) -> Bool {
        lhs.name == rhs.name &&
        lhs.type == rhs.type
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(name?.hashValue)
        hasher.combine(type?.hashValue)
        
    }

}
