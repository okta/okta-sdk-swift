//
// LogUserAgent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class LogUserAgent: Codable, Hashable {

    public var browser: String?
    public var os: String?
    public var rawUserAgent: String?

    public init(browser: String? = nil, os: String? = nil, rawUserAgent: String? = nil) {
        self.browser = browser
        self.os = os
        self.rawUserAgent = rawUserAgent
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case browser
        case os
        case rawUserAgent
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(browser, forKey: .browser)
        try container.encodeIfPresent(os, forKey: .os)
        try container.encodeIfPresent(rawUserAgent, forKey: .rawUserAgent)
    }



    public static func == (lhs: LogUserAgent, rhs: LogUserAgent) -> Bool {
        lhs.browser == rhs.browser &&
        lhs.os == rhs.os &&
        lhs.rawUserAgent == rhs.rawUserAgent
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(browser?.hashValue)
        hasher.combine(os?.hashValue)
        hasher.combine(rawUserAgent?.hashValue)
        
    }

}
