//
// ApplicationLicensing.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public final class ApplicationLicensing: Codable, Hashable {

    public var seatCount: Int?

    public init(seatCount: Int? = nil) {
        self.seatCount = seatCount
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case seatCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(seatCount, forKey: .seatCount)
    }



    public static func == (lhs: ApplicationLicensing, rhs: ApplicationLicensing) -> Bool {
        lhs.seatCount == rhs.seatCount
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(seatCount?.hashValue)
        
    }

}
