//
// PolicyNetworkCondition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct PolicyNetworkCondition: Codable, Hashable {

    public enum Connection: String, Codable, CaseIterable {
        case anywhere = "ANYWHERE"
        case zone = "ZONE"
    }
    public var connection: Connection?
    public var exclude: [String]?
    public var include: [String]?

    public init(connection: Connection? = nil, exclude: [String]? = nil, include: [String]? = nil) {
        self.connection = connection
        self.exclude = exclude
        self.include = include
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case connection
        case exclude
        case include
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(connection, forKey: .connection)
        try container.encodeIfPresent(exclude, forKey: .exclude)
        try container.encodeIfPresent(include, forKey: .include)
    }



}
