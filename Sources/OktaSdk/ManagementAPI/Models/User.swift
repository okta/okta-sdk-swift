//
// User.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct User: Codable, Hashable {

    public var embedded: [String: AnyCodable]?
    public var links: [String: AnyCodable]?
    public var activated: Date?
    public var created: Date?
    public var credentials: UserCredentials?
    public var id: String?
    public var lastLogin: Date?
    public var lastUpdated: Date?
    public var passwordChanged: Date?
    public var profile: UserProfile?
    public var status: UserStatus?
    public var statusChanged: Date?
    public var transitioningToStatus: UserStatus?
    public var type: UserType?

    public init(embedded: [String: AnyCodable]? = nil, links: [String: AnyCodable]? = nil, activated: Date? = nil, created: Date? = nil, credentials: UserCredentials? = nil, id: String? = nil, lastLogin: Date? = nil, lastUpdated: Date? = nil, passwordChanged: Date? = nil, profile: UserProfile? = nil, status: UserStatus? = nil, statusChanged: Date? = nil, transitioningToStatus: UserStatus? = nil, type: UserType? = nil) {
        self.embedded = embedded
        self.links = links
        self.activated = activated
        self.created = created
        self.credentials = credentials
        self.id = id
        self.lastLogin = lastLogin
        self.lastUpdated = lastUpdated
        self.passwordChanged = passwordChanged
        self.profile = profile
        self.status = status
        self.statusChanged = statusChanged
        self.transitioningToStatus = transitioningToStatus
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case embedded = "_embedded"
        case links = "_links"
        case activated
        case created
        case credentials
        case id
        case lastLogin
        case lastUpdated
        case passwordChanged
        case profile
        case status
        case statusChanged
        case transitioningToStatus
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(embedded, forKey: .embedded)
        try container.encodeIfPresent(links, forKey: .links)
        try container.encodeIfPresent(activated, forKey: .activated)
        try container.encodeIfPresent(created, forKey: .created)
        try container.encodeIfPresent(credentials, forKey: .credentials)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(lastLogin, forKey: .lastLogin)
        try container.encodeIfPresent(lastUpdated, forKey: .lastUpdated)
        try container.encodeIfPresent(passwordChanged, forKey: .passwordChanged)
        try container.encodeIfPresent(profile, forKey: .profile)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(statusChanged, forKey: .statusChanged)
        try container.encodeIfPresent(transitioningToStatus, forKey: .transitioningToStatus)
        try container.encodeIfPresent(type, forKey: .type)
    }



}

