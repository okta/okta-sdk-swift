//
// Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
// The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
//
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and limitations under the License.
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Agent details */
public struct Agent: Codable, Hashable {

    public var id: String?
    public var isHidden: Bool?
    public var isLatestGAedVersion: Bool?
    public var lastConnection: Date?
    public var name: String?
    public var operationalStatus: OperationalStatus?
    public var poolId: String?
    public var type: AgentType?
    public var updateMessage: String?
    public var updateStatus: AgentUpdateInstanceStatus?
    public var version: String?
    public var links: HrefObject?

    public init(id: String? = nil, isHidden: Bool? = nil, isLatestGAedVersion: Bool? = nil, lastConnection: Date? = nil, name: String? = nil, operationalStatus: OperationalStatus? = nil, poolId: String? = nil, type: AgentType? = nil, updateMessage: String? = nil, updateStatus: AgentUpdateInstanceStatus? = nil, version: String? = nil, links: HrefObject? = nil) {
        self.id = id
        self.isHidden = isHidden
        self.isLatestGAedVersion = isLatestGAedVersion
        self.lastConnection = lastConnection
        self.name = name
        self.operationalStatus = operationalStatus
        self.poolId = poolId
        self.type = type
        self.updateMessage = updateMessage
        self.updateStatus = updateStatus
        self.version = version
        self.links = links
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case isHidden
        case isLatestGAedVersion
        case lastConnection
        case name
        case operationalStatus
        case poolId
        case type
        case updateMessage
        case updateStatus
        case version
        case links = "_links"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(isHidden, forKey: .isHidden)
        try container.encodeIfPresent(isLatestGAedVersion, forKey: .isLatestGAedVersion)
        try container.encodeIfPresent(lastConnection, forKey: .lastConnection)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(operationalStatus, forKey: .operationalStatus)
        try container.encodeIfPresent(poolId, forKey: .poolId)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(updateMessage, forKey: .updateMessage)
        try container.encodeIfPresent(updateStatus, forKey: .updateStatus)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(links, forKey: .links)
    }



}

