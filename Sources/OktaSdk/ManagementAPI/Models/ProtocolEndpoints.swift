//
// ProtocolEndpoints.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct ProtocolEndpoints: Codable, Hashable {

    public var acs: ProtocolEndpoint?
    public var authorization: ProtocolEndpoint?
    public var jwks: ProtocolEndpoint?
    public var metadata: ProtocolEndpoint?
    public var slo: ProtocolEndpoint?
    public var sso: ProtocolEndpoint?
    public var token: ProtocolEndpoint?
    public var userInfo: ProtocolEndpoint?

    public init(acs: ProtocolEndpoint? = nil, authorization: ProtocolEndpoint? = nil, jwks: ProtocolEndpoint? = nil, metadata: ProtocolEndpoint? = nil, slo: ProtocolEndpoint? = nil, sso: ProtocolEndpoint? = nil, token: ProtocolEndpoint? = nil, userInfo: ProtocolEndpoint? = nil) {
        self.acs = acs
        self.authorization = authorization
        self.jwks = jwks
        self.metadata = metadata
        self.slo = slo
        self.sso = sso
        self.token = token
        self.userInfo = userInfo
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case acs
        case authorization
        case jwks
        case metadata
        case slo
        case sso
        case token
        case userInfo
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(acs, forKey: .acs)
        try container.encodeIfPresent(authorization, forKey: .authorization)
        try container.encodeIfPresent(jwks, forKey: .jwks)
        try container.encodeIfPresent(metadata, forKey: .metadata)
        try container.encodeIfPresent(slo, forKey: .slo)
        try container.encodeIfPresent(sso, forKey: .sso)
        try container.encodeIfPresent(token, forKey: .token)
        try container.encodeIfPresent(userInfo, forKey: .userInfo)
    }



}

