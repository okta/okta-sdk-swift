//
// Scope.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct Scope: Codable, Hashable {

    public var stringValue: String?
    public var type: ScopeType?

    public init(stringValue: String? = nil, type: ScopeType? = nil) {
        self.stringValue = stringValue
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case stringValue
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(stringValue, forKey: .stringValue)
        try container.encodeIfPresent(type, forKey: .type)
    }



}

