//
// Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
// The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
//
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and limitations under the License.
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct EmailCustomization: Codable, Hashable {

    /** The email&#39;s HTML body. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references). */
    public var body: String
    /** The email&#39;s subject. May contain [variable references](https://velocity.apache.org/engine/1.7/user-guide.html#references). */
    public var subject: String
    /** The UTC time at which this email customization was created. */
    public var created: Date?
    /** A unique identifier for this email customization. */
    public var id: String?
    /** Whether this is the default customization for the email template. Each customized email template must have exactly one default customization. Defaults to &#x60;true&#x60; for the first customization and &#x60;false&#x60; thereafter. */
    public var isDefault: Bool?
    /** The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646). */
    public var language: String
    /** The UTC time at which this email customization was last updated. */
    public var lastUpdated: Date?
    public var links: EmailCustomizationAllOfLinks?

    public init(body: String, subject: String, created: Date? = nil, id: String? = nil, isDefault: Bool? = nil, language: String, lastUpdated: Date? = nil, links: EmailCustomizationAllOfLinks? = nil) {
        self.body = body
        self.subject = subject
        self.created = created
        self.id = id
        self.isDefault = isDefault
        self.language = language
        self.lastUpdated = lastUpdated
        self.links = links
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case body
        case subject
        case created
        case id
        case isDefault
        case language
        case lastUpdated
        case links = "_links"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(body, forKey: .body)
        try container.encode(subject, forKey: .subject)
        try container.encodeIfPresent(created, forKey: .created)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(isDefault, forKey: .isDefault)
        try container.encode(language, forKey: .language)
        try container.encodeIfPresent(lastUpdated, forKey: .lastUpdated)
        try container.encodeIfPresent(links, forKey: .links)
    }



}

