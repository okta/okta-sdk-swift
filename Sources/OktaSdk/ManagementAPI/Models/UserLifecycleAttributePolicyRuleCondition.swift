//
// UserLifecycleAttributePolicyRuleCondition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct UserLifecycleAttributePolicyRuleCondition: Codable, Hashable {

    public var attributeName: String?
    public var matchingValue: String?

    public init(attributeName: String? = nil, matchingValue: String? = nil) {
        self.attributeName = attributeName
        self.matchingValue = matchingValue
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case attributeName
        case matchingValue
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(attributeName, forKey: .attributeName)
        try container.encodeIfPresent(matchingValue, forKey: .matchingValue)
    }



}

