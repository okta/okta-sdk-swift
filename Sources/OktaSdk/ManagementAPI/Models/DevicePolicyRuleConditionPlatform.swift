//
// DevicePolicyRuleConditionPlatform.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct DevicePolicyRuleConditionPlatform: Codable, Hashable {

    public enum SupportedMDMFrameworks: String, Codable, CaseIterable {
        case afw = "AFW"
        case safe = "SAFE"
        case native = "NATIVE"
    }
    public enum Types: String, Codable, CaseIterable {
        case ios = "IOS"
        case android = "ANDROID"
        case osx = "OSX"
        case windows = "WINDOWS"
    }
    public var supportedMDMFrameworks: [SupportedMDMFrameworks]?
    public var types: [Types]?

    public init(supportedMDMFrameworks: [SupportedMDMFrameworks]? = nil, types: [Types]? = nil) {
        self.supportedMDMFrameworks = supportedMDMFrameworks
        self.types = types
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case supportedMDMFrameworks
        case types
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(supportedMDMFrameworks, forKey: .supportedMDMFrameworks)
        try container.encodeIfPresent(types, forKey: .types)
    }



}

