//
// PolicyRuleAuthContextCondition.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct PolicyRuleAuthContextCondition: Codable, Hashable {

    public enum AuthType: String, Codable, CaseIterable {
        case any = "ANY"
        case radius = "RADIUS"
    }
    public var authType: AuthType?

    public init(authType: AuthType? = nil) {
        self.authType = authType
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case authType
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(authType, forKey: .authType)
    }



}

