//
// PasswordCredentialHash.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct PasswordCredentialHash: Codable/*, Hashable*/ {

    public var algorithm: PasswordCredentialHashAlgorithm?
    public var salt: String?
    public var saltOrder: String?
    public var value: String?
    public var workFactor: Int?

    public init(algorithm: PasswordCredentialHashAlgorithm? = nil, salt: String? = nil, saltOrder: String? = nil, value: String? = nil, workFactor: Int? = nil) {
        self.algorithm = algorithm
        self.salt = salt
        self.saltOrder = saltOrder
        self.value = value
        self.workFactor = workFactor
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case algorithm
        case salt
        case saltOrder
        case value
        case workFactor
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(algorithm, forKey: .algorithm)
        try container.encodeIfPresent(salt, forKey: .salt)
        try container.encodeIfPresent(saltOrder, forKey: .saltOrder)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(workFactor, forKey: .workFactor)
    }



}

