//
// Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
// The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
//
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and limitations under the License.
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct Brand: Codable, Hashable {

    public var agreeToCustomPrivacyPolicy: Bool?
    public var customPrivacyPolicyUrl: String?
    /** The language specified as an [IETF BCP 47 language tag](https://datatracker.ietf.org/doc/html/rfc5646). */
    public var displayLanguage: String?
    public var id: String?
    public var optOutOfUserCommunications: Bool?
    public var removePoweredByOkta: Bool?
    public var links: [String: AnyCodable]?

    public init(agreeToCustomPrivacyPolicy: Bool? = nil, customPrivacyPolicyUrl: String? = nil, displayLanguage: String? = nil, id: String? = nil, optOutOfUserCommunications: Bool? = nil, removePoweredByOkta: Bool? = nil, links: [String: AnyCodable]? = nil) {
        self.agreeToCustomPrivacyPolicy = agreeToCustomPrivacyPolicy
        self.customPrivacyPolicyUrl = customPrivacyPolicyUrl
        self.displayLanguage = displayLanguage
        self.id = id
        self.optOutOfUserCommunications = optOutOfUserCommunications
        self.removePoweredByOkta = removePoweredByOkta
        self.links = links
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case agreeToCustomPrivacyPolicy
        case customPrivacyPolicyUrl
        case displayLanguage
        case id
        case optOutOfUserCommunications
        case removePoweredByOkta
        case links = "_links"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(agreeToCustomPrivacyPolicy, forKey: .agreeToCustomPrivacyPolicy)
        try container.encodeIfPresent(customPrivacyPolicyUrl, forKey: .customPrivacyPolicyUrl)
        try container.encodeIfPresent(displayLanguage, forKey: .displayLanguage)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(optOutOfUserCommunications, forKey: .optOutOfUserCommunications)
        try container.encodeIfPresent(removePoweredByOkta, forKey: .removePoweredByOkta)
        try container.encodeIfPresent(links, forKey: .links)
    }



}

