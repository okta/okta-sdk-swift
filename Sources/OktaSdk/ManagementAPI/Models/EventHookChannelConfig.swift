//
// EventHookChannelConfig.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct EventHookChannelConfig: Codable, Hashable {

    public var authScheme: EventHookChannelConfigAuthScheme?
    public var headers: [EventHookChannelConfigHeader]?
    public var uri: String?

    public init(authScheme: EventHookChannelConfigAuthScheme? = nil, headers: [EventHookChannelConfigHeader]? = nil, uri: String? = nil) {
        self.authScheme = authScheme
        self.headers = headers
        self.uri = uri
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case authScheme
        case headers
        case uri
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(authScheme, forKey: .authScheme)
        try container.encodeIfPresent(headers, forKey: .headers)
        try container.encodeIfPresent(uri, forKey: .uri)
    }



}

