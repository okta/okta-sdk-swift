//
// LogTarget.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct LogTarget: Codable, Hashable {

    public var alternateId: String?
    public var detailEntry: [String: AnyCodable]?
    public var displayName: String?
    public var id: String?
    public var type: String?

    public init(alternateId: String? = nil, detailEntry: [String: AnyCodable]? = nil, displayName: String? = nil, id: String? = nil, type: String? = nil) {
        self.alternateId = alternateId
        self.detailEntry = detailEntry
        self.displayName = displayName
        self.id = id
        self.type = type
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case alternateId
        case detailEntry
        case displayName
        case id
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(alternateId, forKey: .alternateId)
        try container.encodeIfPresent(detailEntry, forKey: .detailEntry)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(type, forKey: .type)
    }



}

