//
// LogIpAddress.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct LogIpAddress: Codable/*, Hashable*/ {

    public var geographicalContext: LogGeographicalContext?
    public var ip: String?
    public var source: String?
    public var version: String?

    public init(geographicalContext: LogGeographicalContext? = nil, ip: String? = nil, source: String? = nil, version: String? = nil) {
        self.geographicalContext = geographicalContext
        self.ip = ip
        self.source = source
        self.version = version
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case geographicalContext
        case ip
        case source
        case version
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(geographicalContext, forKey: .geographicalContext)
        try container.encodeIfPresent(ip, forKey: .ip)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(version, forKey: .version)
    }



}

