//
// Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.
// The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the "License.")
//
// You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
// WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
// See the License for the specific language governing permissions and limitations under the License.
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

#if canImport(FoundationNetworking)
import FoundationNetworking
#endif

public extension OktaClient {

    struct SystemLogAPI: OktaClientAPI {
        internal let context: OktaClient.APIContext

        /**
         List all System Log Events
         
         - parameter since: (query)  (optional)
         - parameter until: (query)  (optional)
         - parameter filter: (query)  (optional)
         - parameter q: (query)  (optional)
         - parameter limit: (query)  (optional, default to 100)
         - parameter sortOrder: (query)  (optional, default to "ASCENDING")
         - parameter after: (query)  (optional)
         */
        func getLogs(since: Date? = nil, until: Date? = nil, filter: String? = nil, q: String? = nil, limit: Int? = nil, sortOrder: String? = nil, after: String? = nil) async throws -> OktaResponse<[LogEvent]> {
            try await send(try request(to: "/api/v1/logs", method: "GET", query: [
                    "since": since, 
                    "until": until, 
                    "filter": filter, 
                    "q": q, 
                    "limit": limit, 
                    "sortOrder": sortOrder, 
                    "after": after
                ]))
        }

    }
}
