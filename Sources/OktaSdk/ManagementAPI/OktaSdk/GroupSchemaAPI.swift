//
// GroupSchemaAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

#if canImport(Combine)
import Combine
#endif

public extension OktaClient {

    struct GroupSchemaAPI: OktaClientAPI {
        internal let baseURL: URL
        internal let session: URLSession


        internal func getGroupSchemaURLRequest() throws -> URLRequest {
            try request(to: "/api/v1/meta/schemas/group/default", method: "GET")
        }

        /**
         Fetches the group schema
         
         - parameter completion: completion handler to receive the data and the error objects
         */
        func getGroupSchema(completion: @escaping (Result<OktaResponse<GroupSchema>, Error>) -> Void) {
            do {
                send(try getGroupSchemaURLRequest(), completion: completion)
            } catch {
                completion(.failure(error))
            }
        }

        /**
         Fetches the group schema
         
         */
        @available(iOS 15.0, tvOS 15.0, macOS 12.0, *)
        func getGroupSchemaAsync() async throws -> OktaResponse<GroupSchema> {
            try await send(try getGroupSchemaURLRequest())
        }

        #if canImport(Combine)
        /**
         Fetches the group schema
         
         */
        @available(iOS 13.0, tvOS 13.0, macOS 10.15, *)
        func getGroupSchema() throws -> AnyPublisher<OktaResponse<GroupSchema>, Error> {
            publish(try getGroupSchemaURLRequest())
        }
        #endif


        internal func updateGroupSchemaURLRequest(groupSchema: GroupSchema? = nil) throws -> URLRequest {
            try request(to: "/api/v1/meta/schemas/group/default", method: "POST", body: groupSchema)
        }

        /**
         Updates, adds ore removes one or more custom Group Profile properties in the schema
         
         - parameter groupSchema: (body)  (optional)
         - parameter completion: completion handler to receive the data and the error objects
         */
        func updateGroupSchema(groupSchema: GroupSchema? = nil, completion: @escaping (Result<OktaResponse<GroupSchema>, Error>) -> Void) {
            do {
                send(try updateGroupSchemaURLRequest(groupSchema: groupSchema), completion: completion)
            } catch {
                completion(.failure(error))
            }
        }

        /**
         Updates, adds ore removes one or more custom Group Profile properties in the schema
         
         - parameter groupSchema: (body)  (optional)
         */
        @available(iOS 15.0, tvOS 15.0, macOS 12.0, *)
        func updateGroupSchemaAsync(groupSchema: GroupSchema? = nil) async throws -> OktaResponse<GroupSchema> {
            try await send(try updateGroupSchemaURLRequest(groupSchema: groupSchema))
        }

        #if canImport(Combine)
        /**
         Updates, adds ore removes one or more custom Group Profile properties in the schema
         
         - parameter groupSchema: (body)  (optional)
         */
        @available(iOS 13.0, tvOS 13.0, macOS 10.15, *)
        func updateGroupSchema(groupSchema: GroupSchema? = nil) throws -> AnyPublisher<OktaResponse<GroupSchema>, Error> {
            publish(try updateGroupSchemaURLRequest(groupSchema: groupSchema))
        }
        #endif

    }
}
