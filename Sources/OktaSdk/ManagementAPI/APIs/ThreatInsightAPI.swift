//
// ThreatInsightAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class ThreatInsightAPI {
    /**

     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getCurrentConfiguration(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ThreatInsightConfiguration?, _ error: Error?) -> Void)) {
        getCurrentConfigurationWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /api/v1/threats/configuration
     - Gets current ThreatInsight configuration
     - API Key:
       - type: apiKey Authorization 
       - name: api_token
     - returns: RequestBuilder<ThreatInsightConfiguration> 
     */
    open class func getCurrentConfigurationWithRequestBuilder() -> RequestBuilder<ThreatInsightConfiguration> {
        let path = "/api/v1/threats/configuration"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ThreatInsightConfiguration>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter threatInsightConfiguration: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func updateConfiguration(threatInsightConfiguration: ThreatInsightConfiguration, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ThreatInsightConfiguration?, _ error: Error?) -> Void)) {
        updateConfigurationWithRequestBuilder(threatInsightConfiguration: threatInsightConfiguration).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - POST /api/v1/threats/configuration
     - Updates ThreatInsight configuration
     - API Key:
       - type: apiKey Authorization 
       - name: api_token
     - parameter threatInsightConfiguration: (body)  
     - returns: RequestBuilder<ThreatInsightConfiguration> 
     */
    open class func updateConfigurationWithRequestBuilder(threatInsightConfiguration: ThreatInsightConfiguration) -> RequestBuilder<ThreatInsightConfiguration> {
        let path = "/api/v1/threats/configuration"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: threatInsightConfiguration)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ThreatInsightConfiguration>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
