// APIs.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

protocol OktaSdkAPI: AnyObject {
    var basePath: String { get }
    var credential: URLCredential? { get }
    var customHeaders: [String: String] { get }
    var requestBuilderFactory: RequestBuilderFactory { get }
    var apiResponseQueue: DispatchQueue { get }
}

class RequestBuilder<T> {
    var credential: URLCredential?
    var headers: [String: String]
    
    let api: OktaSdkAPI
    let parameters: [String: Any]?
    let method: String
    let URLString: String

    /// Optional block to obtain a reference to the request's progress instance when available.
    /// With the URLSession http client the request's progress only works on iOS 11.0, macOS 10.13, macCatalyst 13.0, tvOS 11.0, watchOS 4.0.
    /// If you need to get the request's progress in older OS versions, please use Alamofire http client.
    var onProgressReady: ((Progress) -> Void)?

    required init(api: OktaSdkAPI, method: String, URLString: String, parameters: [String: Any]?, headers: [String: String] = [:]) {
        self.api = api
        self.method = method
        self.URLString = URLString
        self.parameters = parameters
        self.headers = headers

        addHeaders(api.customHeaders)
    }

    func addHeaders(_ aHeaders: [String: String]) {
        for (header, value) in aHeaders {
            headers[header] = value
        }
    }

    func execute(_ apiResponseQueue: DispatchQueue?, _ completion: @escaping (_ result: Swift.Result<Response<T>, Error>) -> Void) { }

    func addHeader(name: String, value: String) -> Self {
        if !value.isEmpty {
            headers[name] = value
        }
        return self
    }

    func addCredential() -> Self {
        credential = api.credential
        return self
    }
}

protocol RequestBuilderFactory {
    func getNonDecodableBuilder<T>() -> RequestBuilder<T>.Type
    func getBuilder<T: Decodable>() -> RequestBuilder<T>.Type
}
